// Code generated by goa v3.21.1, DO NOT EDIT.
//
// Meeting Service client
//
// Command:
// $ goa gen github.com/linuxfoundation/lfx-v2-meeting-service/design

package meetingservice

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "Meeting Service" service client.
type Client struct {
	GetMeetingsEndpoint             goa.Endpoint
	CreateMeetingEndpoint           goa.Endpoint
	GetMeetingEndpoint              goa.Endpoint
	UpdateMeetingEndpoint           goa.Endpoint
	DeleteMeetingEndpoint           goa.Endpoint
	GetMeetingRegistrantsEndpoint   goa.Endpoint
	CreateMeetingRegistrantEndpoint goa.Endpoint
	GetMeetingRegistrantEndpoint    goa.Endpoint
	UpdateMeetingRegistrantEndpoint goa.Endpoint
	DeleteMeetingRegistrantEndpoint goa.Endpoint
	ReadyzEndpoint                  goa.Endpoint
	LivezEndpoint                   goa.Endpoint
}

// NewClient initializes a "Meeting Service" service client given the endpoints.
func NewClient(getMeetings, createMeeting, getMeeting, updateMeeting, deleteMeeting, getMeetingRegistrants, createMeetingRegistrant, getMeetingRegistrant, updateMeetingRegistrant, deleteMeetingRegistrant, readyz, livez goa.Endpoint) *Client {
	return &Client{
		GetMeetingsEndpoint:             getMeetings,
		CreateMeetingEndpoint:           createMeeting,
		GetMeetingEndpoint:              getMeeting,
		UpdateMeetingEndpoint:           updateMeeting,
		DeleteMeetingEndpoint:           deleteMeeting,
		GetMeetingRegistrantsEndpoint:   getMeetingRegistrants,
		CreateMeetingRegistrantEndpoint: createMeetingRegistrant,
		GetMeetingRegistrantEndpoint:    getMeetingRegistrant,
		UpdateMeetingRegistrantEndpoint: updateMeetingRegistrant,
		DeleteMeetingRegistrantEndpoint: deleteMeetingRegistrant,
		ReadyzEndpoint:                  readyz,
		LivezEndpoint:                   livez,
	}
}

// GetMeetings calls the "get-meetings" endpoint of the "Meeting Service"
// service.
// GetMeetings may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) GetMeetings(ctx context.Context, p *GetMeetingsPayload) (res *GetMeetingsResult, err error) {
	var ires any
	ires, err = c.GetMeetingsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetMeetingsResult), nil
}

// CreateMeeting calls the "create-meeting" endpoint of the "Meeting Service"
// service.
// CreateMeeting may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "Conflict" (type *ConflictError): Conflict
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) CreateMeeting(ctx context.Context, p *CreateMeetingPayload) (res *Meeting, err error) {
	var ires any
	ires, err = c.CreateMeetingEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Meeting), nil
}

// GetMeeting calls the "get-meeting" endpoint of the "Meeting Service" service.
// GetMeeting may return the following errors:
//   - "NotFound" (type *NotFoundError): Resource not found
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) GetMeeting(ctx context.Context, p *GetMeetingPayload) (res *GetMeetingResult, err error) {
	var ires any
	ires, err = c.GetMeetingEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetMeetingResult), nil
}

// UpdateMeeting calls the "update-meeting" endpoint of the "Meeting Service"
// service.
// UpdateMeeting may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "NotFound" (type *NotFoundError): Resource not found
//   - "Conflict" (type *ConflictError): Conflict
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) UpdateMeeting(ctx context.Context, p *UpdateMeetingPayload) (res *Meeting, err error) {
	var ires any
	ires, err = c.UpdateMeetingEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Meeting), nil
}

// DeleteMeeting calls the "delete-meeting" endpoint of the "Meeting Service"
// service.
// DeleteMeeting may return the following errors:
//   - "NotFound" (type *NotFoundError): Resource not found
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) DeleteMeeting(ctx context.Context, p *DeleteMeetingPayload) (err error) {
	_, err = c.DeleteMeetingEndpoint(ctx, p)
	return
}

// GetMeetingRegistrants calls the "get-meeting-registrants" endpoint of the
// "Meeting Service" service.
// GetMeetingRegistrants may return the following errors:
//   - "NotFound" (type *NotFoundError): Meeting not found
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) GetMeetingRegistrants(ctx context.Context, p *GetMeetingRegistrantsPayload) (res *GetMeetingRegistrantsResult, err error) {
	var ires any
	ires, err = c.GetMeetingRegistrantsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetMeetingRegistrantsResult), nil
}

// CreateMeetingRegistrant calls the "create-meeting-registrant" endpoint of
// the "Meeting Service" service.
// CreateMeetingRegistrant may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "NotFound" (type *NotFoundError): Meeting not found
//   - "Conflict" (type *ConflictError): Registrant already exists
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) CreateMeetingRegistrant(ctx context.Context, p *CreateMeetingRegistrantPayload) (res *Registrant, err error) {
	var ires any
	ires, err = c.CreateMeetingRegistrantEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Registrant), nil
}

// GetMeetingRegistrant calls the "get-meeting-registrant" endpoint of the
// "Meeting Service" service.
// GetMeetingRegistrant may return the following errors:
//   - "NotFound" (type *NotFoundError): Meeting or registrant not found
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) GetMeetingRegistrant(ctx context.Context, p *GetMeetingRegistrantPayload) (res *GetMeetingRegistrantResult, err error) {
	var ires any
	ires, err = c.GetMeetingRegistrantEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetMeetingRegistrantResult), nil
}

// UpdateMeetingRegistrant calls the "update-meeting-registrant" endpoint of
// the "Meeting Service" service.
// UpdateMeetingRegistrant may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "NotFound" (type *NotFoundError): Meeting or registrant not found
//   - "Conflict" (type *ConflictError): Conflict
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) UpdateMeetingRegistrant(ctx context.Context, p *UpdateMeetingRegistrantPayload) (res *Registrant, err error) {
	var ires any
	ires, err = c.UpdateMeetingRegistrantEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Registrant), nil
}

// DeleteMeetingRegistrant calls the "delete-meeting-registrant" endpoint of
// the "Meeting Service" service.
// DeleteMeetingRegistrant may return the following errors:
//   - "NotFound" (type *NotFoundError): Meeting or registrant not found
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) DeleteMeetingRegistrant(ctx context.Context, p *DeleteMeetingRegistrantPayload) (err error) {
	_, err = c.DeleteMeetingRegistrantEndpoint(ctx, p)
	return
}

// Readyz calls the "readyz" endpoint of the "Meeting Service" service.
// Readyz may return the following errors:
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service is unavailable
//   - error: internal error
func (c *Client) Readyz(ctx context.Context) (res []byte, err error) {
	var ires any
	ires, err = c.ReadyzEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.([]byte), nil
}

// Livez calls the "livez" endpoint of the "Meeting Service" service.
func (c *Client) Livez(ctx context.Context) (res []byte, err error) {
	var ires any
	ires, err = c.LivezEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.([]byte), nil
}
