// Code generated by goa v3.21.1, DO NOT EDIT.
//
// Meeting Service client
//
// Command:
// $ goa gen github.com/linuxfoundation/lfx-v2-meeting-service/design

package meetingservice

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "Meeting Service" service client.
type Client struct {
	GetMeetingsEndpoint                  goa.Endpoint
	CreateMeetingEndpoint                goa.Endpoint
	GetMeetingBaseEndpoint               goa.Endpoint
	GetMeetingSettingsEndpoint           goa.Endpoint
	GetMeetingJoinURLEndpoint            goa.Endpoint
	UpdateMeetingBaseEndpoint            goa.Endpoint
	UpdateMeetingSettingsEndpoint        goa.Endpoint
	DeleteMeetingEndpoint                goa.Endpoint
	GetMeetingRegistrantsEndpoint        goa.Endpoint
	CreateMeetingRegistrantEndpoint      goa.Endpoint
	GetMeetingRegistrantEndpoint         goa.Endpoint
	UpdateMeetingRegistrantEndpoint      goa.Endpoint
	DeleteMeetingRegistrantEndpoint      goa.Endpoint
	ZoomWebhookEndpoint                  goa.Endpoint
	GetPastMeetingsEndpoint              goa.Endpoint
	CreatePastMeetingEndpoint            goa.Endpoint
	GetPastMeetingEndpoint               goa.Endpoint
	DeletePastMeetingEndpoint            goa.Endpoint
	GetPastMeetingParticipantsEndpoint   goa.Endpoint
	CreatePastMeetingParticipantEndpoint goa.Endpoint
	GetPastMeetingParticipantEndpoint    goa.Endpoint
	UpdatePastMeetingParticipantEndpoint goa.Endpoint
	DeletePastMeetingParticipantEndpoint goa.Endpoint
	GetPastMeetingSummariesEndpoint      goa.Endpoint
	GetPastMeetingSummaryEndpoint        goa.Endpoint
	ReadyzEndpoint                       goa.Endpoint
	LivezEndpoint                        goa.Endpoint
}

// NewClient initializes a "Meeting Service" service client given the endpoints.
func NewClient(getMeetings, createMeeting, getMeetingBase, getMeetingSettings, getMeetingJoinURL, updateMeetingBase, updateMeetingSettings, deleteMeeting, getMeetingRegistrants, createMeetingRegistrant, getMeetingRegistrant, updateMeetingRegistrant, deleteMeetingRegistrant, zoomWebhook, getPastMeetings, createPastMeeting, getPastMeeting, deletePastMeeting, getPastMeetingParticipants, createPastMeetingParticipant, getPastMeetingParticipant, updatePastMeetingParticipant, deletePastMeetingParticipant, getPastMeetingSummaries, getPastMeetingSummary, readyz, livez goa.Endpoint) *Client {
	return &Client{
		GetMeetingsEndpoint:                  getMeetings,
		CreateMeetingEndpoint:                createMeeting,
		GetMeetingBaseEndpoint:               getMeetingBase,
		GetMeetingSettingsEndpoint:           getMeetingSettings,
		GetMeetingJoinURLEndpoint:            getMeetingJoinURL,
		UpdateMeetingBaseEndpoint:            updateMeetingBase,
		UpdateMeetingSettingsEndpoint:        updateMeetingSettings,
		DeleteMeetingEndpoint:                deleteMeeting,
		GetMeetingRegistrantsEndpoint:        getMeetingRegistrants,
		CreateMeetingRegistrantEndpoint:      createMeetingRegistrant,
		GetMeetingRegistrantEndpoint:         getMeetingRegistrant,
		UpdateMeetingRegistrantEndpoint:      updateMeetingRegistrant,
		DeleteMeetingRegistrantEndpoint:      deleteMeetingRegistrant,
		ZoomWebhookEndpoint:                  zoomWebhook,
		GetPastMeetingsEndpoint:              getPastMeetings,
		CreatePastMeetingEndpoint:            createPastMeeting,
		GetPastMeetingEndpoint:               getPastMeeting,
		DeletePastMeetingEndpoint:            deletePastMeeting,
		GetPastMeetingParticipantsEndpoint:   getPastMeetingParticipants,
		CreatePastMeetingParticipantEndpoint: createPastMeetingParticipant,
		GetPastMeetingParticipantEndpoint:    getPastMeetingParticipant,
		UpdatePastMeetingParticipantEndpoint: updatePastMeetingParticipant,
		DeletePastMeetingParticipantEndpoint: deletePastMeetingParticipant,
		GetPastMeetingSummariesEndpoint:      getPastMeetingSummaries,
		GetPastMeetingSummaryEndpoint:        getPastMeetingSummary,
		ReadyzEndpoint:                       readyz,
		LivezEndpoint:                        livez,
	}
}

// GetMeetings calls the "get-meetings" endpoint of the "Meeting Service"
// service.
// GetMeetings may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) GetMeetings(ctx context.Context, p *GetMeetingsPayload) (res *GetMeetingsResult, err error) {
	var ires any
	ires, err = c.GetMeetingsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetMeetingsResult), nil
}

// CreateMeeting calls the "create-meeting" endpoint of the "Meeting Service"
// service.
// CreateMeeting may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "Conflict" (type *ConflictError): Conflict
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) CreateMeeting(ctx context.Context, p *CreateMeetingPayload) (res *MeetingFull, err error) {
	var ires any
	ires, err = c.CreateMeetingEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*MeetingFull), nil
}

// GetMeetingBase calls the "get-meeting-base" endpoint of the "Meeting
// Service" service.
// GetMeetingBase may return the following errors:
//   - "NotFound" (type *NotFoundError): Resource not found
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) GetMeetingBase(ctx context.Context, p *GetMeetingBasePayload) (res *GetMeetingBaseResult, err error) {
	var ires any
	ires, err = c.GetMeetingBaseEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetMeetingBaseResult), nil
}

// GetMeetingSettings calls the "get-meeting-settings" endpoint of the "Meeting
// Service" service.
// GetMeetingSettings may return the following errors:
//   - "NotFound" (type *NotFoundError): Resource not found
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) GetMeetingSettings(ctx context.Context, p *GetMeetingSettingsPayload) (res *GetMeetingSettingsResult, err error) {
	var ires any
	ires, err = c.GetMeetingSettingsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetMeetingSettingsResult), nil
}

// GetMeetingJoinURL calls the "get-meeting-join-url" endpoint of the "Meeting
// Service" service.
// GetMeetingJoinURL may return the following errors:
//   - "NotFound" (type *NotFoundError): Meeting not found
//   - "Unauthorized" (type *UnauthorizedError): User is not authorized to access the join URL
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) GetMeetingJoinURL(ctx context.Context, p *GetMeetingJoinURLPayload) (res *GetMeetingJoinURLResult, err error) {
	var ires any
	ires, err = c.GetMeetingJoinURLEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetMeetingJoinURLResult), nil
}

// UpdateMeetingBase calls the "update-meeting-base" endpoint of the "Meeting
// Service" service.
// UpdateMeetingBase may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "NotFound" (type *NotFoundError): Resource not found
//   - "Conflict" (type *ConflictError): Conflict
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) UpdateMeetingBase(ctx context.Context, p *UpdateMeetingBasePayload) (res *MeetingBase, err error) {
	var ires any
	ires, err = c.UpdateMeetingBaseEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*MeetingBase), nil
}

// UpdateMeetingSettings calls the "update-meeting-settings" endpoint of the
// "Meeting Service" service.
// UpdateMeetingSettings may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "NotFound" (type *NotFoundError): Resource not found
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) UpdateMeetingSettings(ctx context.Context, p *UpdateMeetingSettingsPayload) (res *MeetingSettings, err error) {
	var ires any
	ires, err = c.UpdateMeetingSettingsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*MeetingSettings), nil
}

// DeleteMeeting calls the "delete-meeting" endpoint of the "Meeting Service"
// service.
// DeleteMeeting may return the following errors:
//   - "NotFound" (type *NotFoundError): Resource not found
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) DeleteMeeting(ctx context.Context, p *DeleteMeetingPayload) (err error) {
	_, err = c.DeleteMeetingEndpoint(ctx, p)
	return
}

// GetMeetingRegistrants calls the "get-meeting-registrants" endpoint of the
// "Meeting Service" service.
// GetMeetingRegistrants may return the following errors:
//   - "NotFound" (type *NotFoundError): Meeting not found
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) GetMeetingRegistrants(ctx context.Context, p *GetMeetingRegistrantsPayload) (res *GetMeetingRegistrantsResult, err error) {
	var ires any
	ires, err = c.GetMeetingRegistrantsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetMeetingRegistrantsResult), nil
}

// CreateMeetingRegistrant calls the "create-meeting-registrant" endpoint of
// the "Meeting Service" service.
// CreateMeetingRegistrant may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "NotFound" (type *NotFoundError): Meeting not found
//   - "Conflict" (type *ConflictError): Registrant already exists
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) CreateMeetingRegistrant(ctx context.Context, p *CreateMeetingRegistrantPayload) (res *Registrant, err error) {
	var ires any
	ires, err = c.CreateMeetingRegistrantEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Registrant), nil
}

// GetMeetingRegistrant calls the "get-meeting-registrant" endpoint of the
// "Meeting Service" service.
// GetMeetingRegistrant may return the following errors:
//   - "NotFound" (type *NotFoundError): Meeting or registrant not found
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) GetMeetingRegistrant(ctx context.Context, p *GetMeetingRegistrantPayload) (res *GetMeetingRegistrantResult, err error) {
	var ires any
	ires, err = c.GetMeetingRegistrantEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetMeetingRegistrantResult), nil
}

// UpdateMeetingRegistrant calls the "update-meeting-registrant" endpoint of
// the "Meeting Service" service.
// UpdateMeetingRegistrant may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "NotFound" (type *NotFoundError): Meeting or registrant not found
//   - "Conflict" (type *ConflictError): Conflict
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) UpdateMeetingRegistrant(ctx context.Context, p *UpdateMeetingRegistrantPayload) (res *Registrant, err error) {
	var ires any
	ires, err = c.UpdateMeetingRegistrantEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Registrant), nil
}

// DeleteMeetingRegistrant calls the "delete-meeting-registrant" endpoint of
// the "Meeting Service" service.
// DeleteMeetingRegistrant may return the following errors:
//   - "NotFound" (type *NotFoundError): Meeting or registrant not found
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) DeleteMeetingRegistrant(ctx context.Context, p *DeleteMeetingRegistrantPayload) (err error) {
	_, err = c.DeleteMeetingRegistrantEndpoint(ctx, p)
	return
}

// ZoomWebhook calls the "zoom-webhook" endpoint of the "Meeting Service"
// service.
// ZoomWebhook may return the following errors:
//   - "BadRequest" (type *BadRequestError): Invalid webhook payload or signature
//   - "Unauthorized" (type *UnauthorizedError): Invalid webhook signature
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - error: internal error
func (c *Client) ZoomWebhook(ctx context.Context, p *ZoomWebhookPayload) (res *ZoomWebhookResponse, err error) {
	var ires any
	ires, err = c.ZoomWebhookEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*ZoomWebhookResponse), nil
}

// GetPastMeetings calls the "get-past-meetings" endpoint of the "Meeting
// Service" service.
// GetPastMeetings may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) GetPastMeetings(ctx context.Context, p *GetPastMeetingsPayload) (res *GetPastMeetingsResult, err error) {
	var ires any
	ires, err = c.GetPastMeetingsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetPastMeetingsResult), nil
}

// CreatePastMeeting calls the "create-past-meeting" endpoint of the "Meeting
// Service" service.
// CreatePastMeeting may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "Conflict" (type *ConflictError): Past meeting already exists
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) CreatePastMeeting(ctx context.Context, p *CreatePastMeetingPayload) (res *PastMeeting, err error) {
	var ires any
	ires, err = c.CreatePastMeetingEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*PastMeeting), nil
}

// GetPastMeeting calls the "get-past-meeting" endpoint of the "Meeting
// Service" service.
// GetPastMeeting may return the following errors:
//   - "NotFound" (type *NotFoundError): Past meeting not found
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) GetPastMeeting(ctx context.Context, p *GetPastMeetingPayload) (res *GetPastMeetingResult, err error) {
	var ires any
	ires, err = c.GetPastMeetingEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetPastMeetingResult), nil
}

// DeletePastMeeting calls the "delete-past-meeting" endpoint of the "Meeting
// Service" service.
// DeletePastMeeting may return the following errors:
//   - "NotFound" (type *NotFoundError): Past meeting not found
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) DeletePastMeeting(ctx context.Context, p *DeletePastMeetingPayload) (err error) {
	_, err = c.DeletePastMeetingEndpoint(ctx, p)
	return
}

// GetPastMeetingParticipants calls the "get-past-meeting-participants"
// endpoint of the "Meeting Service" service.
// GetPastMeetingParticipants may return the following errors:
//   - "NotFound" (type *NotFoundError): Past meeting not found
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) GetPastMeetingParticipants(ctx context.Context, p *GetPastMeetingParticipantsPayload) (res *GetPastMeetingParticipantsResult, err error) {
	var ires any
	ires, err = c.GetPastMeetingParticipantsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetPastMeetingParticipantsResult), nil
}

// CreatePastMeetingParticipant calls the "create-past-meeting-participant"
// endpoint of the "Meeting Service" service.
// CreatePastMeetingParticipant may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "NotFound" (type *NotFoundError): Past meeting not found
//   - "Conflict" (type *ConflictError): Past meeting participant already exists
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) CreatePastMeetingParticipant(ctx context.Context, p *CreatePastMeetingParticipantPayload) (res *PastMeetingParticipant, err error) {
	var ires any
	ires, err = c.CreatePastMeetingParticipantEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*PastMeetingParticipant), nil
}

// GetPastMeetingParticipant calls the "get-past-meeting-participant" endpoint
// of the "Meeting Service" service.
// GetPastMeetingParticipant may return the following errors:
//   - "NotFound" (type *NotFoundError): Past meeting or participant not found
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) GetPastMeetingParticipant(ctx context.Context, p *GetPastMeetingParticipantPayload) (res *GetPastMeetingParticipantResult, err error) {
	var ires any
	ires, err = c.GetPastMeetingParticipantEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetPastMeetingParticipantResult), nil
}

// UpdatePastMeetingParticipant calls the "update-past-meeting-participant"
// endpoint of the "Meeting Service" service.
// UpdatePastMeetingParticipant may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "NotFound" (type *NotFoundError): Past meeting or participant not found
//   - "Conflict" (type *ConflictError): Conflict
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) UpdatePastMeetingParticipant(ctx context.Context, p *UpdatePastMeetingParticipantPayload) (res *PastMeetingParticipant, err error) {
	var ires any
	ires, err = c.UpdatePastMeetingParticipantEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*PastMeetingParticipant), nil
}

// DeletePastMeetingParticipant calls the "delete-past-meeting-participant"
// endpoint of the "Meeting Service" service.
// DeletePastMeetingParticipant may return the following errors:
//   - "NotFound" (type *NotFoundError): Past meeting or participant not found
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) DeletePastMeetingParticipant(ctx context.Context, p *DeletePastMeetingParticipantPayload) (err error) {
	_, err = c.DeletePastMeetingParticipantEndpoint(ctx, p)
	return
}

// GetPastMeetingSummaries calls the "get-past-meeting-summaries" endpoint of
// the "Meeting Service" service.
// GetPastMeetingSummaries may return the following errors:
//   - "NotFound" (type *NotFoundError): Past meeting not found
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) GetPastMeetingSummaries(ctx context.Context, p *GetPastMeetingSummariesPayload) (res *GetPastMeetingSummariesResult, err error) {
	var ires any
	ires, err = c.GetPastMeetingSummariesEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetPastMeetingSummariesResult), nil
}

// GetPastMeetingSummary calls the "get-past-meeting-summary" endpoint of the
// "Meeting Service" service.
// GetPastMeetingSummary may return the following errors:
//   - "NotFound" (type *NotFoundError): Past meeting or summary not found
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) GetPastMeetingSummary(ctx context.Context, p *GetPastMeetingSummaryPayload) (res *GetPastMeetingSummaryResult, err error) {
	var ires any
	ires, err = c.GetPastMeetingSummaryEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetPastMeetingSummaryResult), nil
}

// Readyz calls the "readyz" endpoint of the "Meeting Service" service.
// Readyz may return the following errors:
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service is unavailable
//   - error: internal error
func (c *Client) Readyz(ctx context.Context) (res []byte, err error) {
	var ires any
	ires, err = c.ReadyzEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.([]byte), nil
}

// Livez calls the "livez" endpoint of the "Meeting Service" service.
func (c *Client) Livez(ctx context.Context) (res []byte, err error) {
	var ires any
	ires, err = c.LivezEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.([]byte), nil
}
